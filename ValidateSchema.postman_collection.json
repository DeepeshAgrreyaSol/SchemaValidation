{
	"info": {
		"_postman_id": "c4359e90-6afe-4172-9b10-5603b267fdbb",
		"name": "ValidateSchema",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "ValidateSchemaGetRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\r",
							"tests[\"Response time is less than 200ms\"] = responseTime < 500;\r",
							"\r",
							"tests[\"User ID is Present\"] = responseBody.has(\"userId\");\r",
							"tests[\"ID is Present\"] = responseBody.has(\"id\");\r",
							"tests[\"Title is Present\"] = responseBody.has(\"title\");\r",
							"tests[\"API Bodyis Present\"] = responseBody.has(\"body\");\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"tests[\"User ID should be \"+jsonData.userId] = jsonData.userId === 1;\r",
							"console.log(\"User ID I am getting from API is \"+jsonData.userId);\r",
							"\r",
							"\r",
							"\r",
							"var schema = {\r",
							"\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"userId\": 1,\r",
							"            \"id\": 1,\r",
							"            \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\r",
							"            \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"userId\",\r",
							"        \"id\",\r",
							"        \"title\",\r",
							"        \"body\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"userId\": {\r",
							"            \"$id\": \"#/properties/userId\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The userId schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ]\r",
							"        },\r",
							"        \"id\": {\r",
							"            \"$id\": \"#/properties/id\",\r",
							"            \"type\": \"integer\",\r",
							"            \"title\": \"The id schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": 0,\r",
							"            \"examples\": [\r",
							"                1\r",
							"            ]\r",
							"        },\r",
							"        \"title\": {\r",
							"            \"$id\": \"#/properties/title\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The title schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\"\r",
							"            ]\r",
							"        },\r",
							"        \"body\": {\r",
							"            \"$id\": \"#/properties/body\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The body schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"};\r",
							"\r",
							"\r",
							"\r",
							"tests[\"Valid scehma\"] = tv4.validate(jsonData, schema);\r",
							"\r",
							"console.log(\"Validation failed: \", tv4.error);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "endpoint",
			"value": "api/register?page=2"
		},
		{
			"key": "email",
			"value": "eve.holt@reqres.in"
		},
		{
			"key": "password",
			"value": "pistol"
		}
	]
}